#setwd('/media/hdd/kaggle/recruit/data')
#source('/media/hdd/kaggle/recruit/code/dev/evaluation-mapk.R')
library(Matrix)
setwd('Kaggle/Ponpare/')

#Goal: Apply Cosine Similariy method to unique Genre/Area subsets

#read in all the input data
cpdtr <- read.csv("coupon_detail_train.csv")
cpltr <- read.csv("coupon_list_train.csv")
cplte <- read.csv("coupon_list_test.csv")
ulist <- read.csv("user_list.csv")

#Added large area name and capsule text, binned price rate and discount price
train <- merge(cpdtr,cpltr)
train <- train[,c("COUPON_ID_hash","USER_ID_hash",
                  "GENRE_NAME","DISCOUNT_PRICE","PRICE_RATE",
                  "USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
                  "USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
                  "USABLE_DATE_BEFORE_HOLIDAY","large_area_name","ken_name","small_area_name", "CAPSULE_TEXT")]
#combine the test set with the train
cplte$USER_ID_hash <- "dummyuser"
cpchar <- cplte[,c("COUPON_ID_hash","USER_ID_hash",
                   "GENRE_NAME","DISCOUNT_PRICE","PRICE_RATE",
                   "USABLE_DATE_MON","USABLE_DATE_TUE","USABLE_DATE_WED","USABLE_DATE_THU",
                   "USABLE_DATE_FRI","USABLE_DATE_SAT","USABLE_DATE_SUN","USABLE_DATE_HOLIDAY",
                   "USABLE_DATE_BEFORE_HOLIDAY","large_area_name","ken_name","small_area_name", "CAPSULE_TEXT")]

train <- rbind(train,cpchar)

train[is.na(train)] <- 1
#feature engineering

#Price Rate is discount price as % of list price
train$PriceRateBin <- as.factor(ifelse(train$PRICE_RATE <= 50, "<50",
                                    ifelse(train$PRICE_RATE <= 60, "50<60",
                                          ifelse(train$PRICE_RATE <= 70, "60<70",
                                                 ifelse(train$PRICE_RATE <= 80, "70<80",
                                                        ifelse(train$PRICE_RATE <= 90, "80<90","90<100"))))))
#Discount Rate Binning:		0-1k, 1k-2k, 2k-3k, 4k, 5k, 6k, 100k
train$DiscountPriceBin <- as.factor(ifelse(train$DISCOUNT_PRICE <= 1000, "<1k",
                                       ifelse(train$DISCOUNT_PRICE <= 2000, "1k<2k",
                                            ifelse(train$DISCOUNT_PRICE <= 3000, "2k<3k",
                                                   ifelse(train$DISCOUNT_PRICE <= 4000, "3k<4k",
                                                          ifelse(train$DISCOUNT_PRICE <= 5000, "4k<5k",
                                                                 ifelse(train$DISCOUNT_PRICE <= 6000, "5k<6k", ">6k")))))))

train <- cbind(train[,c(1,2)],
               model.matrix(~ -1 + .,train[,-c(1,2)],
                            contrasts.arg=lapply(train[,names(which(sapply(train[,-c(1,2)], is.factor)==TRUE))], 
                                                 contrasts, contrasts=FALSE)))

test <- train[train$USER_ID_hash=="dummyuser",]
test <- test[,-2]
train <- train[train$USER_ID_hash!="dummyuser",]

uchar <- aggregate(.~USER_ID_hash, data=train[,-1],FUN=mean)
ucharnames <- as.data.frame(names(uchar))
#Is this overweigthing
uchar$DISCOUNT_PRICE <- 1
uchar$PRICE_RATE <- 1

#Subset both uchar and test by genre and small_area_name, when combo has less than X observations, use uchar
#Incorporate price and discount rate
#uchar only c=incorporates genre_name, small area, ken, usable date
# Genre	13, Discount	1, PriceRate	1, UsableDays	7, UsableHol	2, largearea	9, ken	47
# smallarea	55, capsule	25, pricerate	6, discprice	7

W <- as.matrix(Diagonal(x=
                          c(rep(4,13),  # Genre	13
                            rep(1,2),     # Discount	1, PriceRate	1,
                            rep(0.2,7),   # UsableDays	7,
                            rep(0.2,2),     # UsableHol	2,
                            rep(2,9),     #largearea	9, 
                            rep(3,47),    # ken	47
                            rep(3,55),    # smallarea	55, 
                            rep(4,25),    #capsule	25, 
                            rep(4,6),     #pricerate	6, 
                            rep(4,7))))   #discprice	7
# uchar is a matrix of features each user values, W is weight matrix of those features, 
# test are features of test coupons
score = as.matrix(uchar[,2:ncol(uchar)]) %*% W %*% t(as.matrix(test[,2:ncol(test)]))

###########STOPPED HERE, FIGURING OUT WEIGHTS ###############


#order the list of coupons according to similarities and take only first 10 coupons
uchar$PURCHASED_COUPONS <- do.call(rbind, lapply(1:nrow(uchar),FUN=function(i){
  purchased_cp <- paste(test$COUPON_ID_hash[order(score[i,], decreasing = TRUE)][1:10],collapse=" ")
  return(purchased_cp)
}))

#make submission
submission <- merge(ulist, uchar, all.x=TRUE)
submission <- submission[,c("USER_ID_hash","PURCHASED_COUPONS")]
write.csv(submission, file="~/cosine_sim_subtestkevin1.csv", row.names=FALSE)
